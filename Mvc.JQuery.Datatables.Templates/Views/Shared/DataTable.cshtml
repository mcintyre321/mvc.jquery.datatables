@using Mvc.JQuery.Datatables
@model DataTableVm
@{
 
}
<table id="@Model.Id" class="display @(Model.TableClass ?? DataTableVm.DefaultTableClass ?? "")" >
    <thead>
        <tr>
            @foreach (var column in Model.Columns)
            {
                <th>@column.DisplayName</th>
            }
        </tr>
        @if (Model.ColumnFilter)
        {
            <tr>
                @foreach (var column in Model.Columns)
                {
                    <th>@column.DisplayName</th>
                }
            </tr>
        }
    </thead>
    <tbody>
        <tr>
            <td colspan="@Model.Columns.Count()" class="dataTables_empty">
                Loading data from server
            </td>
        </tr>
    </tbody>
</table>
<script type="text/javascript">
    $(document).ready(function() {
        var $table = $('#@Model.Id');
        var dt = $table.dataTable({
            "bProcessing": true,
            "bStateSave": true,
            "bServerSide": true,
            "bFilter": @Model.ShowSearch.ToString().ToLower(),
            "sDom": '@Html.Raw(Model.Dom)',
            "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "bAutoWidth": @Model.AutoWidth.ToString().ToLowerInvariant(),
            "sAjaxSource": "@Html.Raw(Model.AjaxUrl)", @Html.Raw(Model.TableTools ? "\"oTableTools\" : { \"sSwfPath\": \"/content/DataTables/extras/TableTools/media/swf/copy_csv_xls_pdf.swf\" }," : "")
            "fnServerData": function(sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
                    "success": fnCallback
                });
            }
        });
        @if (Model.ColumnFilter)
        {
<text>
            dt.columnFilter({
                sPlaceHolder: "head:before",
                aoColumns: [@Html.Raw(Model.ColumnFiltersString)]
            });
</text>
        }
    });
</script>
